- id: fall_trigger_auto_reset
  alias: 낙상 감지 상태 자동 복구
  description: input_boolean.fall_triggered가 ON으로 바뀌면 일정 시간 후 자동으로 OFF로 복구
  trigger:
    - trigger: state
      entity_id: input_boolean.fall_triggered
      to: "on"
      for: 00:00:30
  condition:
    - condition: template
      value_template: "{{ not is_state('sensor.uptime', '0') }}"
  action:
    - action: input_boolean.turn_off
      target:
        entity_id: input_boolean.fall_triggered
  mode: single
- id: high_power_consumption_alert
  alias: 높은 전력 소비 알림
  description: 총 전력 소비가 임계값을 초과했을 때 알림
  trigger:
    - trigger: numeric_state
      entity_id: sensor.total_power_consumption
      above: 500
      for: 00:05:00
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - action: persistent_notification.create
      data:
        title: ⚡ 전력 소비 주의
        message:
          "현재 전력 소비량이 {{ states('sensor.total_power_consumption') }}W입니다. 에너지
          절약을 위해 불필요한 기기를 확인해보세요.

          "
        notification_id: high_power_alert
- id: energy_saving_mode
  alias: 에너지 절약 모드
  description: 집에 아무도 없을 때 에너지 절약
  trigger:
    - trigger: state
      entity_id: binary_sensor.someone_home
      from: "on"
      to: "off"
      for: 00:30:00
  action:
    - action: light.turn_off
      target:
        entity_id:
          - light.zigbee_dimmer
          - light.smart_bulb
    - action: persistent_notification.create
      data:
        title: "\U0001F3E0 에너지 절약 모드 활성화"
        message: 부재 중이므로 조명을 자동으로 꺼두었습니다.
- id: low_battery_device_alert
  alias: 저배터리 디바이스 알림
  trigger:
    - trigger: state
      entity_id: binary_sensor.low_battery_devices
      from: "off"
      to: "on"
  action:
    - action: persistent_notification.create
      data:
        title: "\U0001F50B 배터리 부족 주의"
        message:
          "배터리가 부족한 디바이스가 있습니다: {% set devices = [\n  ('Apple Watch', states('sensor.gimuhyeonyi_apple_watch_battery')),\n
          \ ('MacBook Pro', states('sensor.gimuhyeonyi_macbook_pro_battery')),\n  ('iPad
          Pro', states('sensor.uhyeonyi_ipad_pro_battery')),\n  ('iPhone 17 Pro', states('sensor.iphone_battery_level'))\n]
          %} {% for device, battery in devices %} {% if battery|int < 20 %} - {{ device
          }}: {{ battery }}% {% endif %} {% endfor %}\n"
        notification_id: low_battery_alert
- id: critical_battery_alert
  alias: 극저배터리 알림
  trigger:
    - trigger: numeric_state
      entity_id:
        - sensor.gimuhyeonyi_apple_watch_battery
        - sensor.gimuhyeonyi_macbook_pro_battery
        - sensor.uhyeonyi_ipad_pro_battery
        - sensor.iphone_battery_level
      below: 10
  action:
    - action: persistent_notification.create
      data:
        title: "\U0001F6A8 배터리 위험 수준"
        message:
          "{{ trigger.to_state.attributes.friendly_name }}의 배터리가 {{ trigger.to_state.state
          }}%입니다. 즉시 충전하세요!

          "
        notification_id: critical_battery_{{ trigger.entity_id.split('.')[1] }}
- id: evening_brushing_reminder
  alias: 저녁 양치 알림
  trigger:
    - trigger: time
      at: "22:00:00"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
    - condition: template
      value_template:
        "{{ (now() - states.sensor.smart_series_7000_6f50.last_changed).total_seconds()
        > 7200 }}

        "
  action:
    - action: persistent_notification.create
      data:
        title: "\U0001FAA5 양치 알림"
        message: 최근 2시간 동안 양치 기록이 없습니다.
        notification_id: brushing_reminder
- id: high_heart_rate_alert
  alias: 심박수 경고
  trigger:
    - trigger: numeric_state
      entity_id: sensor.ble_heart_rate_e0e33e6221b5
      above: 120
      for: 00:01:00
  action:
    - action: persistent_notification.create
      data:
        title: ❤️ 심박수 경고
        message: 심박수가 120bpm 이상으로 상승했습니다. 상태를 확인하세요.
        notification_id: heart_rate_alert
- id: daily_steps_goal_achievement
  alias: 일일 걸음수 목표 달성
  trigger:
    - trigger: numeric_state
      entity_id: sensor.ble_steps_e0e33e6221b5
      above: 10000
  condition:
    - condition: template
      value_template:
        "{{ (now().date() - states.sensor.ble_steps_e0e33e6221b5.last_changed.date()).days
        == 0 }}

        "
  action:
    - action: persistent_notification.create
      data:
        title: "\U0001F389 걸음수 목표 달성!"
        message:
          "축하합니다! 오늘 {{ states('sensor.ble_steps_e0e33e6221b5') }}보를 걸으셨네요. 건강한
          하루를 보내고 계시는군요! \U0001F44F\n"
        notification_id: steps_goal_achieved
- id: dishwasher_cycle_complete
  alias: 식기세척기 완료 알림
  trigger:
    - trigger: state
      entity_id: sensor.jubang_siggiseceoggi_remaining_time
      to: "0"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - action: persistent_notification.create
      data:
        title: "\U0001F37D️ 식기세척기 완료"
        message:
          "식기세척기 세척이 완료되었습니다!  식기를 꺼내주세요. 총 세척 시간: {{ states('sensor.jubang_siggiseceoggi_total_time')
          }}

          "
        notification_id: dishwasher_complete
- id: humidity_management_alert
  alias: 습도 관리 알림
  trigger:
    - trigger: numeric_state
      entity_id: sensor.seutaendeuhyeong_eeokeon_humidity
      above: 70
      for: 00:30:00
    - trigger: numeric_state
      entity_id: sensor.seutaendeuhyeong_eeokeon_humidity
      below: 30
      for: 00:30:00
  action:
    - action: persistent_notification.create
      data:
        title: "\U0001F4A7 습도 관리 필요"
        message:
          "현재 습도가 {{ states('sensor.seutaendeuhyeong_eeokeon_humidity') }}%입니다.
          {% if trigger.platform == 'numeric_state' and trigger.above is not none %}\n
          \ 습도가 높습니다. 제습을 고려해보세요.\n{% else %}\n  습도가 낮습니다. 가습을 고려해보세요.\n{% endif %}\n"
        notification_id: humidity_alert
- id: sunrise_gradual_lighting
  alias: 일출 조명 서서히 켜기
  trigger:
    - trigger: sun
      event: sunrise
      offset: -00:30:00
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
  action:
    - action: light.turn_on
      target:
        entity_id: light.zigbee_dimmer
      data:
        brightness_pct: 10
        transition: 300
    - delay: 00:15:00
    - action: light.turn_on
      target:
        entity_id: light.zigbee_dimmer
      data:
        brightness_pct: 50
        transition: 900
- id: sunset_auto_lighting
  alias: 일몰 후 자동 조명
  trigger:
    - trigger: sun
      event: sunset
      offset: 00:30:00
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - action: light.turn_on
      target:
        entity_id:
          - light.zigbee_dimmer
          - light.smart_bulb
      data:
        brightness_pct: 80
        color_temp_kelvin: 2500
- id: bedtime_lights_off
  alias: 취침 시간 조명 끄기
  trigger:
    - trigger: time
      at: "23:30:00"
  condition:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - action: light.turn_on
      target:
        entity_id:
          - light.zigbee_dimmer
          - light.smart_bulb
      data:
        brightness_pct: 20
        transition: 300
    - delay: 00:05:00
    - action: light.turn_off
      target:
        entity_id:
          - light.zigbee_dimmer
          - light.smart_bulb
    - action: persistent_notification.create
      data:
        title: "\U0001F319 좋은 꿈 되세요"
        message: 취침 시간이라 조명을 껐습니다. 좋은 밤 보내세요!
        notification_id: bedtime_lights
- id: workday_morning_briefing
  alias: 근무일 아침 브리핑
  trigger:
    - trigger: time
      at: 07:30:00
  condition:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "on"
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - action: persistent_notification.create
      data:
        title: ☀️ 좋은 아침입니다!
        message:
          "오늘의 정보를 확인해보세요:\n\U0001F4C5 {{ states('sensor.date') }} \U0001F321️
          실내 온도: {{ states('sensor.seutaendeuhyeong_eeokeon_temperature') }}°C \U0001F4A7
          실내 습도: {{ states('sensor.seutaendeuhyeong_eeokeon_humidity') }}% ⚡ 현재 전력:
          {{ states('sensor.total_power_consumption') }}W \U0001F50B 평균 배터리: {{ states('sensor.average_device_battery')
          }}%\n좋은 하루 되세요! \U0001F4AA\n"
        notification_id: morning_briefing
- id: weekend_sleep_mode
  alias: 주말 늦잠 모드
  trigger:
    - trigger: sun
      event: sunrise
      offset: 02:00:00
  condition:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: "off"
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  action:
    - action: light.turn_on
      target:
        entity_id: light.zigbee_dimmer
      data:
        brightness_pct: 30
        transition: 600
    - action: persistent_notification.create
      data:
        title: "\U0001F634 주말 모드"
        message: 주말이니까 천천히 일어나세요. 조명을 부드럽게 켰습니다.
        notification_id: weekend_mode
- id: gas_send_monthly_telegram
  alias: 가스 검침 사진 보내기
  description: ""
  trigger:
    - at: 09:03:00
      trigger: time
  condition:
    - condition: template
      value_template: "{{now().day == 26}}"
  action:
    - variables:
        nowdate: "{{ now().strftime('%Y-%m-%d') }}"
        nowtime: "{{ now().strftime('%Y-%m-%d_%H:%M:%S') }}"
        nowtimefile: "{{ now().strftime('%Y%m%d_%H%M%S') }}"
        nowtimestamp: "{{ now().timestamp() }}"
    - action: pyscript.image_rotate
      metadata: {}
      data:
        input_image: /config/www/tmp/gas/gas_latest.jpg
        output_image: /config/www/tmp/gas/month/gas_{{nowtimefile}}.jpg
        rotation_angle: 0
    - action: notify.telegram_home
      data:
        title: 가스 검침 알림
        message: "검침시간: {{nowdate}}"
        data:
          photo:
            - url: https://ha.aaaa.cc/local/tmp/gas/gas_latest.jpg
              caption: "가스 검침일: {{nowdate}}

                가스 검침: {{states('sensor.gas_meter_2')}}

                월간 사용량: {{state_attr('sensor.gas_meter_monthly','last_period')}}"
      enabled: false
  mode: single
- id: "1755698295141"
  alias: 주변 밝기 자동 조명 제어
  description: 주변 밝기가 충분할 때 자동으로 조명을 끕니다.
  trigger:
    - type: illuminance
      device_id: e28ebb70ec49039d225e74b202fdd91e
      entity_id: 4ff6ecbace5417823e81b823fd5bd60e
      domain: sensor
      trigger: device
      below: 20
  condition: []
  action:
    - type: turn_off
      device_id: 16c454176737aa10fa53bf309f24d111
      entity_id: f88477c68d783968908c54499f788206
      domain: light
  mode: single
- id: "1755744715659"
  alias: 낮은 임계값 조명 알림
  description: 특정 센서 값이 임계값 미만으로 떨어질 때 조명을 켜서 시각적으로 알립니다.
  trigger:
    - type: value
      device_id: 42940cb04959837ed39a637fed0f69e2
      entity_id: 64ba2d64e316df06c349b58054dcab48
      domain: sensor
      trigger: device
      below: 2
  condition: []
  action:
    - type: turn_on
      device_id: 16c454176737aa10fa53bf309f24d111
      entity_id: f88477c68d783968908c54499f788206
      domain: light
      brightness_pct: 100
  mode: single
- id: "1759067786798"
  alias: 이산화탄소 자동 환기 제어
  description: 실내 이산화탄소 농도가 높아지면 환기 시스템을 자동으로 켭니다.
  trigger:
    - trigger: state
      entity_id:
        - binary_sensor.ventilation_should_run
      attribute: 켜짐
  condition:
    - condition: device
      type: is_off
      device_id: 98bda3e8ced3d5a12ee685841e367c15
      entity_id: 99f72fc2d843060f243cb0f5979fe38d
      domain: switch
  action:
    - type: turn_on
      device_id: 98bda3e8ced3d5a12ee685841e367c15
      entity_id: 99f72fc2d843060f243cb0f5979fe38d
      domain: switch
    - repeat:
        count: 12
        sequence:
          - type: toggle
            device_id: 98bda3e8ced3d5a12ee685841e367c15
            entity_id: 08a45393493c019ceb1c55783651f7e1
            domain: switch
          - delay:
              hours: 0
              minutes: 0
              seconds: 1
              milliseconds: 0
      enabled: false
  mode: single
- id: "1759068039218"
  alias: 이산화탄소 자동 환기 하향
  description: 실내 이산화탄소 농도가 기준치 이하로 떨어지면 환기 시스템을 자동으로 끕니다.
  trigger:
    - trigger: state
      entity_id:
        - binary_sensor.ventilation_should_run
      attribute: 꺼짐
  condition:
    - condition: device
      type: is_on
      device_id: 98bda3e8ced3d5a12ee685841e367c15
      entity_id: 99f72fc2d843060f243cb0f5979fe38d
      domain: switch
  action:
    - type: turn_off
      device_id: 98bda3e8ced3d5a12ee685841e367c15
      entity_id: 99f72fc2d843060f243cb0f5979fe38d
      domain: switch
  mode: single
- id: "1759395712039"
  alias: 녹음본 저장 시 로컬 맥으로 복사
  description: ""
  trigger:
    - event_type: voice_recorder_saved
      trigger: event
  action:
    - data:
        url:
          "{{ 'https://caredian.gleeze.com' ~ (trigger.event.data.path | replace('/config/www','/local'))
          }}"
        filename: "{{ trigger.event.data.filename }}"
      action: rest_command.push_record_to_mac
  mode: queued
- id: "1759500010000"
  alias: 가스 검침 단일 프롬프트
  description: 하나의 크롭 이미지에서 프롬프트만으로 7자리(DDD.dddd) 판독
  trigger:
    - trigger: time_pattern
      hours: /1
  condition: []
  action:
    - metadata: {}
      data:
        rgb_color:
          - 255
          - 255
          - 255
        brightness_pct: 35
      target:
        entity_id: light.esp32_cam_esp32_cam_gas_light
      action: light.turn_on
    - delay:
        hours: 0
        minutes: 0
        seconds: 6
        milliseconds: 0
    - metadata: {}
      data:
        filename: /config/www/tmp/gas/gas_latest.jpg
      action: camera.snapshot
      target:
        entity_id: camera.esp32_cam_esp32_cam_gas_cam
    - alias: 크롭만 수행(리사이즈 미사용)
      action: pyscript.gas_ocr_prepare
      data:
        input_image: /config/www/tmp/gas/gas_latest.jpg
        crop_output: /config/www/tmp/gas/gas_latest-crop.jpg
        resize_output: /config/www/tmp/gas/gas_latest-crop-resize.jpg
        int_output: /config/www/tmp/gas/gas_latest-crop-resize1.jpg
        frac_output: /config/www/tmp/gas/gas_latest-crop-resize2.jpg
        crop_left: 420
        crop_top: 720
        crop_right: 1220
        crop_bottom: 880
        resize_width: 0
        to_grayscale: true
        denoise_median_size: 3
        auto_vertical: true
        vpad: 2
        hpad: 2
    - metadata: {}
      data: {}
      target:
        entity_id: light.esp32_cam_esp32_cam_gas_light
      action: light.turn_off
    - action: ai_task.generate_data
      response_variable: res
      data:
        task_name: 가스 검침 단일 프롬프트
        instructions:
          이 이미지는 기계식 가스 계량기의 7자리 숫자 표시부입니다. 3자리 정수부와 4자리 소수부를 읽고, 숫자만으로
          DDD.dddd 형식으로 반환하세요. 공백·단위·설명·줄바꿈 없이 결과만 출력하세요.
        attachments:
          media_content_id: media-source://media_source/gas/gas_latest.jpg
          media_content_type: image/jpeg
          metadata:
            title: gas_latest.jpg
            thumbnail:
            media_class: image
            children_media_class:
            navigateIds:
              - {}
              - media_content_type: app
                media_content_id: media-source://media_source
              - media_content_type: ""
                media_content_id: media-source://media_source/gas/.
        entity_id: ai_task.qwen_qwen2_5_vl_72b_instruct_free
    - variables:
        res_text: "{{ res.data | default(' ') | string }}"
        gas_value:
          '{{ (res_text | regex_findall(''[0-9]+(?:\.[0-9]+)?'') | first |
          default(''0'')) | float(0) | round(4) }}'
        current_value: "{{ states('sensor.gas_meter_2') | float(0) }}"
        delta: "{{ (gas_value - current_value) | round(4) }}"
    - action: input_number.set_value
      metadata: {}
      data:
        value: "{{ gas_value | float }}"
      target:
        entity_id: input_number.gas_meter_2
    - action: homeassistant.update_entity
      metadata: {}
      target:
        entity_id:
          - sensor.gas_meter_2
          - sensor.gas_meter_monthly
    - action: persistent_notification.create
      data:
        title: ✅ 가스 검침(단일 프롬프트) 기록됨
        message: '{{ now().strftime(''%H:%M:%S'') }} | 응답: "{{ res_text }}"

          적용값: {{ gas_value }} m³ (Δ={{ delta }} m³, 검증 생략)'
  mode: single
- id: electricity_energy_prev2_monthly_update
  alias: 전기 전전월 사용량 업데이트
  description: 전월 전기 사용량 변경 시 전전월 값을 업데이트
  trigger:
    - trigger: state
      entity_id:
        - sensor.electricity_energy_prev_monthly
  condition:
    - condition: template
      value_template:
        "{{ trigger.to_state.state|float(0) > 0 and trigger.from_state.state|float(0)
        > 0 }}"
  action:
    - action: input_number.set_value
      data:
        value: "{{ trigger.from_state.state }}"
      target:
        entity_id: input_number.electricity_energy_prev2_monthly
  mode: single
- id: "1761134823433"
  alias: 시작 시 통합구성요소 새로고침
  description:
    Home Assistant가 시작될 때 일부 통합구성요소가 올바르게 초기화되지 않는 문제를 해결하기 위해 관련 구성 항목을
    다시 로드합니다.
  trigger:
    - trigger: homeassistant
      event: start
  condition: []
  action:
    - action: homeassistant.reload_config_entry
      target:
        entity_id:
          - sensor.mart_l_goyangjeom
          - sensor.mart_e_3047
          - sensor.mart_e_1096
          - sensor.mart_e_2012
          - weather.wn_jib
          - sensor.wn_jib_weather_briefing
          - sensor.wn_jib_next_day_short_comment
          - sensor.wn_jib_day_short_comment
          - sensor.wn_jib_day_condition
          - sensor.wn_jib_night_condition
          - sensor.wn_jib_current_condition
          - weather.forecast_jib
          - image.windy_webcams_1701618298
          - image.windy_webcams_1689176350
          - sensor.sihas_energy_monitor_power
      data: {}
  mode: single

- id: "1761546151051"
  alias: InfluxDB 격주 백업 (일요일 03:00)
  description: 격주 일요일 새벽 3시에 InfluxDB 자동 백업 (짝수 주차)
  trigger:
    - at: 03:00:00
      trigger: time
  condition:
    - condition: time
      weekday:
        - sun
    - condition: template
      value_template: "{{ now().isocalendar()[1] % 2 == 0 }}"
  action:
    - data: {}
      action: shell_command.influxdb_backup
  mode: single

- id: fall_alert_latch_on
  alias: 낙상 감지 래치 ON
  trigger:
    - trigger: state
      entity_id: binary_sensor.fall_detected
      from: "off"
      to: "on"
  action:
    - action: input_boolean.turn_on
      target:
        entity_id: input_boolean.fall_alert_active

    - action: input_datetime.set_datetime
      target:
        entity_id: input_datetime.fall_last_time
      data:
        date: "{{ now().strftime('%Y-%m-%d') }}"
        time: "{{ now().strftime('%H:%M:%S') }}"
  mode: single
- id: fall_detected_alert_full
  alias: "🚨 낙상 감지: 다중 푸시 + 다크테마 팝업"
  trigger:
    - trigger: state
      entity_id: binary_sensor.fall_detected
      to: "on"

  action:
    # 📱 다중 기기로 크리티컬 푸시 전송 (🔊 소리 알림 포함)
    - action: notify.group_fall_alert_devices
      data:
        title: "🚨 낙상 감지"
        message: "즉시 상태를 확인해주세요."
        data:
          push:
            sound:
              name: default
              critical: 1
              volume: 1.0
          channel: alarm_stream_max
          ttl: 0
          priority: high
          importance: high
          persistent: true
          url: /lovelace/home
          actions:
            - action: ACK_FALL
              title: "확인"

    # 💬 브라우저 팝업 (테두리 반짝임 버전)
    - action: browser_mod.popup
      data:
        title: "🚨 낙상 알림"
        dismissable: true
        large: true
        content: |
          <style>
            /* 팝업 전체 다크테마 + 반짝이는 테두리 */
            ha-dialog {
              --mdc-dialog-surface-color: rgba(25, 25, 25, 0.95);
              border: 3px solid rgba(255, 0, 0, 0.85);
              border-radius: 18px;
              animation: border-flash 1.5s infinite;
              box-shadow: 0 0 20px rgba(255, 0, 0, 0.5);
            }

            /* 붉은 테두리 반짝임 */
            @keyframes border-flash {
              0%, 100% {
                border-color: rgba(255, 0, 0, 0.6);
                box-shadow: 0 0 10px rgba(255, 0, 0, 0.5);
              }
              50% {
                border-color: rgba(255, 50, 50, 1);
                box-shadow: 0 0 25px rgba(255, 0, 0, 0.9);
              }
            }

            /* 제목 텍스트 */
            h1 {
              text-align: center;
              color: #ffffff;
              font-size: 2em;
              margin: 0 0 14px 0;
              text-shadow: 0 0 8px rgba(255, 80, 80, 0.9);
            }

            /* 부가 문구 */
            p {
              text-align: center;
              color: #cccccc;
              font-size: 1.1em;
              margin: 0;
            }
          </style>

          <h1>🚨 낙상이 감지되었습니다!</h1>
          <p>즉시 상태를 확인해주세요.</p>
        deviceID:
          - this
  mode: restart
