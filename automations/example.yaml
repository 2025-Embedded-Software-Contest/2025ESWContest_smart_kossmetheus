# ==============================================
# 전력 관리 자동화
# ==============================================

# 높은 전력 소비 알림
- id: high_power_consumption_alert
  alias: "높은 전력 소비 알림"
  description: "총 전력 소비가 임계값을 초과했을 때 알림"
  triggers:
    - trigger: numeric_state
      entity_id: sensor.total_power_consumption
      above: 500  # 500W 이상
      for: "00:05:00"  # 5분간 지속
  conditions:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  actions:
    - action: persistent_notification.create
      data:
        title: "⚡ 전력 소비 주의"
        message: >
          현재 전력 소비량이 {{ states('sensor.total_power_consumption') }}W입니다.
          에너지 절약을 위해 불필요한 기기를 확인해보세요.
        notification_id: high_power_alert

# 저전력 모드 (부재시)
- id: energy_saving_mode
  alias: "에너지 절약 모드"
  description: "집에 아무도 없을 때 에너지 절약"
  triggers:
    - trigger: state
      entity_id: binary_sensor.someone_home
      from: "on"
      to: "off"
      for: "00:30:00"  # 30분간 부재
  actions:
    - action: light.turn_off
      target:
        entity_id:
          - light.zigbee_dimmer
          - light.smart_bulb
    - action: persistent_notification.create
      data:
        title: "🏠 에너지 절약 모드 활성화"
        message: "부재 중이므로 조명을 자동으로 꺼두었습니다."

# ==============================================
# 건강 & 배터리 관리 자동화
# ==============================================

# 저배터리 디바이스 알림
- id: low_battery_device_alert
  alias: "저배터리 디바이스 알림"
  description: "배터리가 부족한 디바이스가 있을 때 알림"
  triggers:
    - trigger: state
      entity_id: binary_sensor.low_battery_devices
      from: "off"
      to: "on"
  actions:
    - action: persistent_notification.create
      data:
        title: "🔋 배터리 부족 주의"
        message: >
          배터리가 부족한 디바이스가 있습니다:
          
          {% set devices = [
            ('Apple Watch', states('sensor.gimuhyeonyi_apple_watch_battery')),
            ('MacBook Pro', states('sensor.gimuhyeonyi_macbook_pro_battery')),
            ('iPad Pro', states('sensor.uhyeonyi_ipad_pro_battery')),
            ('iPhone XS', states('sensor.uhyeonyi_iphone_xs_battery'))
          ] %}
          {% for device, battery in devices %}
          {% if battery|int < 20 %}
          - {{ device }}: {{ battery }}%
          {% endif %}
          {% endfor %}
        notification_id: low_battery_alert

# 개별 디바이스 극저배터리 알림 (10% 이하)
- id: critical_battery_alert
  alias: "극저배터리 알림"
  description: "배터리가 10% 이하일 때 즉시 알림"
  triggers:
    - trigger: numeric_state
      entity_id: 
        - sensor.gimuhyeonyi_apple_watch_battery
        - sensor.gimuhyeonyi_macbook_pro_battery
        - sensor.uhyeonyi_ipad_pro_battery
        - sensor.uhyeonyi_iphone_xs_battery
      below: 10
  actions:
    - action: persistent_notification.create
      data:
        title: "🚨 배터리 위험 수준"
        message: >
          {{ trigger.to_state.attributes.friendly_name }}의 
          배터리가 {{ trigger.to_state.state }}%입니다. 즉시 충전하세요!
        notification_id: critical_battery_{{ trigger.entity_id.split('.')[1] }}

# 양치 알림 (저녁 시간)
- id: evening_brushing_reminder
  alias: "저녁 양치 알림"
  description: "저녁에 양치를 하지 않았을 때 알림"
  triggers:
    - trigger: time
      at: "22:00:00"  # 저녁 10시
  conditions:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
    # 최근 2시간 내에 양치하지 않았을 때
    - condition: template
      value_template: >
        {{ (now() - states.sensor.smart_series_7000_6f50.last_changed).total_seconds() > 7200 }}
  actions:
    - action: persistent_notification.create
      data:
        title: "🪥 양치 알림"
        message: "최근 2시간 동안 양치 기록이 없습니다."
        notification_id: brushing_reminder

# 심박수 과도 상승 감지
- id: high_heart_rate_alert
  alias: "심박수 경고"
  description: "심박수가 120bpm 이상일 때 경고"
  triggers:
    - trigger: numeric_state
      entity_id: sensor.ble_heart_rate_e0e33e6221b5
      above: 120
      for: "00:01:00"
  actions:
    - action: persistent_notification.create
      data:
        title: "❤️ 심박수 경고"
        message: "심박수가 120bpm 이상으로 상승했습니다. 상태를 확인하세요."
        notification_id: heart_rate_alert

# 일일 걸음 수 목표 달성 축하
- id: daily_steps_goal_achievement
  alias: "일일 걸음수 목표 달성"
  description: "하루 걸음수 목표를 달성했을 때 축하 메시지"
  triggers:
    - trigger: numeric_state
      entity_id: sensor.ble_steps_e0e33e6221b5
      above: 10000  # 일일 목표: 10,000보
  conditions:
    - condition: template
      value_template: >
        {{ (now().date() - states.sensor.ble_steps_e0e33e6221b5.last_changed.date()).days == 0 }}
  actions:
    - action: persistent_notification.create
      data:
        title: "🎉 걸음수 목표 달성!"
        message: >
          축하합니다! 오늘 {{ states('sensor.ble_steps_e0e33e6221b5') }}보를 걸으셨네요.
          건강한 하루를 보내고 계시는군요! 👏
        notification_id: steps_goal_achieved

# 식기세척기 완료 알림
- id: dishwasher_cycle_complete
  alias: "식기세척기 완료 알림"
  description: "식기세척기 세척이 완료되었을 때 알림"
  triggers:
    - trigger: state
      entity_id: sensor.jubang_siggiseceoggi_remaining_time
      to: "0"
  conditions:
    - condition: state
      entity_id: binary_sensor.someone_home
      state: "on"
  actions:
    - action: persistent_notification.create
      data:
        title: "🍽️ 식기세척기 완료"
        message: >
          식기세척기 세척이 완료되었습니다! 
          식기를 꺼내주세요. 총 세척 시간: {{ states('sensor.jubang_siggiseceoggi_total_time') }}
        notification_id: dishwasher_complete

# 린스 보충 알림
- id: rinse_aid_refill_reminder
  alias: "린스 보충 알림"
  description: "식기세척기 린스 보충이 필요할 때 알림"
  triggers:
    - trigger: state
      entity_id: binary_sensor.jubang_siggiseceoggi_rinse_refill_needed
      from: "off"
      to: "on"
  actions:
    - action: persistent_notification.create
      data:
        title: "🧴 린스 보충 필요"
        message: >
          식기세척기 린스 보충이 필요합니다. 
          현재 잔여량: {{ states('sensor.jubang_siggiseceoggi_rinse_aid_dispenser_level') }}
        notification_id: rinse_aid_reminder