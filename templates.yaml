# ===========================
# 템플릿 엔티티 분리 파일
# ===========================

- sensor:
    # 총 전력 소비량
    - name: "total_power_consumption"
      unique_id: "total_power_consumption"
      unit_of_measurement: "W"
      state: >
        {% set ac = states('sensor.seutaendeuhyeong_eeokeon_power') | float(0) %}
        {% set kitchen = states('sensor.zigbee_dimmer_power') | float(0) %}
        {% set desktop = states('sensor.deseukeutab_jeonweon_power') | float(0) %}
        {{ (ac + kitchen + desktop) | round(2) }}
      icon: mdi:lightning-bolt

    # 평균 김치냉장고 온도 (개선된 fallback 로직)
    - name: "kimchi_fridge_avg_temperature"
      unique_id: "kimchi_fridge_avg_temperature"
      unit_of_measurement: "°C"
      state: >
        {# kimchi fridge 각 존 센서가 일부 'unavailable'일 때도 평균이 동작하도록 처리 #}
        {% set ids = [
          'sensor.jubang_gimcinaengjanggo_left_temperature',
          'sensor.jubang_gimcinaengjanggo_middle_temperature',
          'sensor.jubang_gimcinaengjanggo_right_temperature',
          'sensor.jubang_gimcinaengjanggo_bottom_temperature'
        ] %}
        {% set nums = [] %}
        {% set unavailable_count = 0 %}
        {% for id in ids %}
          {% set vs = states(id) %}
          {% if vs not in ['unknown', 'unavailable', 'none', None] %}
            {% set temp_val = vs | float(0) %}
            {# 유효한 온도 범위 체크 (-30°C ~ 30°C) #}
            {% if temp_val >= -30 and temp_val <= 30 %}
              {% set nums = nums + [temp_val] %}
            {% endif %}
          {% else %}
            {% set unavailable_count = unavailable_count + 1 %}
          {% endif %}
        {% endfor %}
        {% set count = nums | count %}
        {% if count > 0 %}
          {{ ((nums | sum) / count) | round(1) }}
        {% elif unavailable_count == 4 %}
          {# 모든 센서가 unavailable인 경우 #}
          unavailable
        {% else %}
          {# 일부만 unavailable이지만 유효한 데이터가 없는 경우 #}
          0
        {% endif %}
      icon: >
        {% if states('sensor.kimchi_fridge_avg_temperature') == 'unavailable' %}
          mdi:thermometer-alert
        {% else %}
          mdi:thermometer
        {% endif %}
      attributes:
        available_sensors: >
          {% set ids = [
            'sensor.jubang_gimcinaengjanggo_left_temperature',
            'sensor.jubang_gimcinaengjanggo_middle_temperature', 
            'sensor.jubang_gimcinaengjanggo_right_temperature',
            'sensor.jubang_gimcinaengjanggo_bottom_temperature'
          ] %}
          {% set available = [] %}
          {% for id in ids %}
            {% if states(id) not in ['unknown', 'unavailable', 'none', None] %}
              {% set available = available + [id.split('.')[1].replace('jubang_gimcinaengjanggo_', '').replace('_temperature', '')] %}
            {% endif %}
          {% endfor %}
          {{ available | join(', ') if available else 'none' }}
        total_sensors: 4
        unavailable_sensors: >
          {% set ids = [
            'sensor.jubang_gimcinaengjanggo_left_temperature',
            'sensor.jubang_gimcinaengjanggo_middle_temperature',
            'sensor.jubang_gimcinaengjanggo_right_temperature', 
            'sensor.jubang_gimcinaengjanggo_bottom_temperature'
          ] %}
          {% set unavailable = [] %}
          {% for id in ids %}
            {% if states(id) in ['unknown', 'unavailable', 'none', None] %}
              {% set unavailable = unavailable + [id.split('.')[1].replace('jubang_gimcinaengjanggo_', '').replace('_temperature', '')] %}
            {% endif %}
          {% endfor %}
          {{ unavailable | join(', ') if unavailable else 'none' }}

    # 평균 배터리 수준
    - name: "average_device_battery"
      unique_id: "average_device_battery"
      unit_of_measurement: "%"
      state: >
        {% set watch = states('sensor.gimuhyeonyi_apple_watch_battery') | float(0) %}
        {% set macbook = states('sensor.gimuhyeonyi_macbook_pro_battery') | float(0) %}
        {% set ipad = states('sensor.uhyeonyi_ipad_pro_battery') | float(0) %}
        {% set iphone = states('sensor.uhyeonyi_iphone_xs_battery') | float(0) %}
        {{ ((watch + macbook + ipad + iphone) / 4) | round(0) }}
      icon: mdi:battery

    # 진단: 'unavailable/unknown' 엔티티 개수
    - name: "unavailable_entities_count"
      unique_id: "unavailable_entities_count"
      unit_of_measurement: "entities"
      state: >
        {{ states | selectattr('state', 'in', ['unavailable', 'unknown']) | list | length }}
      icon: mdi:alert-circle-outline

    # 진단: 문제 엔티티 상세(상태=개수, 목록은 attributes에 저장 → 상태 길이 255 제한 회피)
    - name: "unavailable_entities"
      unique_id: "unavailable_entities"
      state: >
        {{ states | selectattr('state', 'in', ['unavailable','unknown']) | list | length }}
      attributes:
        entities: >
          {{ states | selectattr('state','in',['unavailable','unknown'])
                     | map(attribute='entity_id') | list }}
      icon: mdi:code-json

# ===========================
# Gas meter OCR 템플릿 센서
# ===========================
- sensor:
    - name: gas_meter_2
      state: "{{ states('input_number.gas_meter_2') }}"
      unit_of_measurement: m³
      device_class: gas
      state_class: total_increasing

- binary_sensor:
    # 저배터리 알림
    - name: "low_battery_devices"
      unique_id: "low_battery_devices"
      state: >
        {% set devices = [
          states('sensor.gimuhyeonyi_apple_watch_battery') | float(100),
          states('sensor.gimuhyeonyi_macbook_pro_battery') | float(100),
          states('sensor.uhyeonyi_ipad_pro_battery') | float(100),
          states('sensor.uhyeonyi_iphone_xs_battery') | float(100)
        ] %}
        {{ devices | select('lt', 20) | list | length > 0 }}
      icon: mdi:battery-alert

    # 집에 사람 있음
    - name: "someone_home"
      unique_id: "someone_home"
      state: >
        {{ is_state('binary_sensor.iphone_presence', 'on') }}
      icon: mdi:home-account
