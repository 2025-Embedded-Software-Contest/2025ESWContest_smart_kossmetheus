# 디폴트 환경 설정
default_config:

# 프론트엔드 테마 설정
frontend:
  extra_module_url:
    - /hacsfiles/Bubble-Card/bubble-pop-up-fix.js
  themes: !include_dir_merge_named themes

#
scene: !include_dir_merge_list scenes
automation: !include automations.yaml
script: !include scripts.yaml
sensor: !include sensors.yaml
template: !include templates.yaml
influxdb: !include influxdb.yaml
group: !include groups.yaml

command_line:
  - sensor:
      name: Pi5 Fan Speed
      unique_id: pi5_fan_rpm
      scan_interval: 15
      command: "cat /sys/devices/platform/cooling_fan/hwmon/*/fan1_input"
      unit_of_measurement: "RPM"
      value_template: "{{ value }}"
  - sensor:
      name: Pi5 CPU Temperature
      unique_id: pi5_cpu_temp
      scan_interval: 10
      command: "cat /sys/class/thermal/thermal_zone0/temp"
      unit_of_measurement: "°C"
      value_template: "{{ (value | float / 1000) | round(1) }}"
      device_class: temperature
  - sensor:
      name: Pi5 CPU Usage
      unique_id: pi5_cpu_usage
      scan_interval: 30
      command: "ps -A -o %cpu | awk '{s+=$1} END {printf \"%.1f\", s}'"
      unit_of_measurement: "%"
      value_template: "{{ value | float(default=0) | round(1) }}"
  - sensor:
      name: Pi5 Memory Usage
      unique_id: pi5_memory_usage
      scan_interval: 30
      command: "free | grep Mem | awk '{printf \"%.1f\", $3/$2 * 100.0}'"
      unit_of_measurement: "%"
      value_template: "{{ value | float(default=0) | round(1) }}"
# Enable Pyscript custom integration for image pipeline
pyscript:
  # 외부 패키지(Pillow 등) 임포트를 허용해 pyscript 스크립트가 정상 로드되도록 함
  allow_all_imports: true

# SSO 환경 설정
# 1. Reverse Proxy 설정
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.30.33.0/24 # Supervisor 애드온 네트워크
    - 192.168.0.0/24 # NPM이 속한 내부 네트워크 대역
    - 127.0.0.1 # 로컬 루프백

  # ssl 설정
  # server_port: 443
  # ssl_certificate: /ssl/fullchain.pem
  # ssl_key: /ssl/privkey.pem

# 2. oicd 설정
# openid:
#   client_id: "<AUTHENTIK_CLIENT_ID>"
#   client_secret: "<AUTHENTIK_CLIENT_SECRET>"
#   configure_url: "https://auth.example.com/application/o/<provider-slug>/.well-known/openid-configuration"
#   username_field: "preferred_username"   # Authentik에서 이 클레임이 나오게 매핑했을 것
#   scope: "openid profile email"
#   block_login: false
#   openid_text: "Login with Authentik (OIDC)"
# (IdP가 Authorization 헤더를 싫어하면)
# use_auth_header: false

# 재연결 및 타임아웃 설정
recorder:
  commit_interval: 5
  purge_keep_days: 7

# Lovelace 설정
lovelace:
  mode: storage
  resources:
    - url: /hacsfiles/button-card/button-card.js
      type: module
    - url: /hacsfiles/lovelace-card-mod/card-mod.js
      type: module
    - url: /hacsfiles/Bubble-Card/bubble-card.js
      type: module
    - url: /hacsfiles/Bubble-Card/bubble-pop-up-fix.js
      type: module
    - url: /hacsfiles/lovelace-mushroom/mushroom.js
      type: module

# Gas meter (ESP32-CAM + OCR)   #
homeassistant:
  media_dirs:
    local: /config/www
    gas: /config/www/tmp/gas

input_number:
  gas_meter_2:
    name: box
    min: 0
    max: 99999
    # 소수부 4자리(예: 133.5638) 저장을 위해 스텝을 0.0001로 조정
    step: 0.0001
    unit_of_measurement: m³

input_text:
  gas_message_2:
    name: gas message 2
    max: 255

utility_meter:
  gas_meter_monthly:
    source: sensor.gas_meter_2
    cycle: monthly
# HA -> FastAPI Webhook
# rest_command: !include webhook.yaml


rest_command:
  push_record_to_mac:
    url: "https://overgifted-joline-nonstrategically.ngrok-free.dev/pull"
    method: POST
    content_type: "application/json"
    payload: >
      { "url": "{{ url }}", "filename": "{{ filename }}" }
