esphome:
  name: esp32-cam
  friendly_name: esp32-cam

esp32:
  board: esp32cam
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "KAiNlMz95sQeStFmBZMowrvNORM3tIaVnrybZgoFvXw="

ota:
  - platform: esphome
    password: "20a3709c81da3c29a8031084cf39fa8b"

wifi:
  networks:
    - ssid: !secret wifi_ssid_home
      password: !secret wifi_password_home
    - ssid: !secret wifi_ssid_office
      password: !secret wifi_password_office

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Cam Fallback Hotspot"
    password: "YSzrOiu9YClb"

captive_portal:
  

# =============================
# ESP32-CAM Camera (AI-Thinker)
# =============================
esp32_camera:
  name: esp_cam_gas_cam
  external_clock:
    pin: GPIO0
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32
  resolution: 1024x768
  jpeg_quality: 10
  vertical_flip: false
  horizontal_mirror: false

# 미리보기용 웹서버 (선택)
web_server:
  port: 80

# =============================
# 플래시(조명) - 밝기 제어 가능
# =============================
output:
  - platform: ledc
    pin: GPIO4
    id: esp32cam_flash

light:
  - platform: monochromatic
    id: esp_cam_gas_light
    name: esp_cam_gas_light
    output: esp32cam_flash
    default_transition_length: 0s

# =============================
# 캡처 테스트 버튼 (HA에서 호출 가능)
# =============================
button:
  - platform: template
    name: "Capture Gas Snapshot"
    on_press:
      - light.turn_on:
          id: esp_cam_gas_light
          brightness: 80%
      - delay: 2s
      - esp32_camera.capture:
      - delay: 1s
      - light.turn_off:
          id: esp_cam_gas_light

# 재부팅 스위치
switch:
  - platform: restart
    name: "ESP32-CAM Restart"