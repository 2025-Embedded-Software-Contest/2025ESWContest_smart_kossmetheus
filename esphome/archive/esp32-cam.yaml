esphome:
  name: esp32-cam
  friendly_name: "ESP32 Camera Test"

esp32:
  board: esp32cam
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "KAiNlMz95sQeStFmBZMowrvNORM3tIaVnrybZgoFvXw="

ota:
  - platform: esphome
    password: "20a3709c81da3c29a8031084cf39fa8b"

wifi:
  networks:
    - ssid: !secret wifi_ssid_home
      password: !secret wifi_password_home
    - ssid: !secret wifi_ssid_office
      password: !secret wifi_password_office

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ESP32-CAM Fallback Hotspot"
    password: "YSzrOiu9YClb"

captive_portal:

# =============================
# I2C Bus for Camera
# =============================
i2c:
  - id: camera_i2c
    sda: GPIO26
    scl: GPIO27
    scan: true

# =============================
# ESP32-CAM Camera (AI-Thinker)
# =============================
esp32_camera:
  name: "ESP32 Camera"
  external_clock:
    pin: GPIO0
    frequency: 20MHz
  i2c_id: camera_i2c
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32
  resolution: 640x480
  jpeg_quality: 10
  vertical_flip: true
  horizontal_mirror: true

# =============================
# Camera Web Server for Testing
# =============================
esp32_camera_web_server:
  - port: 8080
    mode: stream
  - port: 8081
    mode: snapshot

# Basic web server for device info
web_server:
  port: 80

# =============================
# Flash LED for better lighting
# =============================
output:
  - platform: ledc
    pin: GPIO4
    id: camera_flash

light:
  - platform: monochromatic
    name: "Camera Flash"
    output: camera_flash
    default_transition_length: 0s

# =============================
# Utility switches
# =============================
switch:
  - platform: restart
    name: "ESP32-CAM Restart"
